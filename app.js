// Generated by CoffeeScript 1.8.0
(function() {
  var UdpGun, fs, gun, helpers, os, queryBlockChain, queryLoop, request, settings, submitData, _;

  os = require('os');

  fs = require('fs');

  _ = require('underscore');

  request = require('request');

  helpers = require('helpers');

  UdpGun = require('udp-client');

  settings = {
    host: 'logserver',
    port: "5001",
    interval: helpers.minute,
    extendPacket: {
      type: 'btc',
      host: os.hostname()
    }
  };

  if (fs.existsSync('./settings.js')) {
    _.extend(settings, require('./settings').setting);
  }

  gun = new UdpGun(settings.port, settings.host);

  queryBlockChain = function(callback) {
    console.log('query!');
    return request('https://blockchain.info/ticker', function(error, response, body) {
      if (error) {
        return helpers.cbc(callback, error);
      }
      if (response.statusCode !== 200) {
        return helpers.cbc(callback, 'got response code ' + response.statusCode);
      }
      console.log('got', body);
      try {
        return helpers.cbc(callback, null, JSON.parse(body));
      } catch (_error) {
        error = _error;
        console.log(error);
        return helpers.cbc(callback, 'unable to parse the data received as json');
      }
    });
  };

  submitData = function(packet) {
    packet = _.extend(packet, settings.extendPacket);
    console.log('sending', packet);
    return gun.send(new Buffer(JSON.stringify(packet)));
  };

  queryLoop = function() {
    return queryBlockChain(function(err, data) {
      if (err) {
        console.error(err);
      } else {
        submitData(data);
      }
      return setTimeout(queryLoop, settings.interval);
    });
  };

  queryLoop();

}).call(this);
